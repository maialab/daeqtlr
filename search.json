[{"path":"https://maialab.org/daeqtlr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Maia Lab Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"concepts","dir":"Articles","previous_headings":"","what":"Concepts","title":"Introduction to daeqtlr","text":"DAE SNP: SNP allelic expression (AE) ratio measured. AE quantitative trait used one variables statistical association test performing DAEQTL mapping. AE ratios sensible DAE SNPs heterozygous. Candidate SNP: SNP candidate DAE quantitative trait loci (DAEQTL). SNPs whose zygosity level used variable statistical association test. Zygosity: degree copies locus two homologous chromosomes genetic sequence . copies , locus homozygous, different, loci heterozygous.","code":""},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to daeqtlr","text":"daeqtlr bundled example data set consists three files: snp_pairs.csv: table SNP pairs tested association. Check vignette('snp-pairs') need assemble data SNPs genomic annotation. zygosity.csv: table providing zygosity levels (homozygous heterozygous) SNP/biological sample combination. Check vignette('genotypes--zygosity') genotypes need convert zygosity levels. ae.csv: Allelic expression (AE) ratios DAE SNP / biological sample combination. easily read bundled files can use function daeqtlr_example() retrieve path file, e.g. path snp_pairs.csv : import data R provide set read_* functions:","code":"daeqtlr_example(\"snp_pairs.csv\") #> [1] \"/home/runner/work/_temp/Library/daeqtlr/extdata/snp_pairs.csv\" snp_pairs <- read_snp_pairs(file = daeqtlr_example(\"snp_pairs.csv\")) zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\")) ae <- read_ae_ratios(file = daeqtlr_example(\"ae.csv\"))"},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"snp-pairs","dir":"Articles","previous_headings":"Data","what":"SNP pairs","title":"Introduction to daeqtlr","text":"SNP pairs table indicates pairs SNPs (DAE SNP candidate SNP) tested statistical association. row pair. starting point need assemble set pairs first list SNP, namely looking neighboring SNPs genomic window, please read vignette(\"snp-pairs\"). function read_snp_pairs() expects path CSV file containing five columns: dae_snp: id DAE SNP. candidate_snp: id candidate DAEQTL SNP, simply candidate SNP. chromosome: chromosome name. dae_snp_position: genomic position DAE SNP. candidate_snp_position: genomic position candidate SNP. columns expected order. actual column names header file ignored imported R indicated . read_snp_pairs() read file data.table::fread() return data table object. example data set, SNPs dummy identifiers clear non-valid rs identifiers: note inclusion character \"X\" \"rs\" prefix SNP number. 200 pairs, scattered across 3 chromosomes: 1, 19, 4. means DAEQTL mapping consist (potentially) 200 statistical tests.","code":"# First 10 pairs snp_pairs[1:10, ] #>     dae_snp candidate_snp chromosome dae_snp_position candidate_snp_position #>  1:  rsX099        rsX008          1        180709100              180682638 #>  2:  rsX099        rsX011          1        180709100              181006806 #>  3:  rsX099        rsX012          1        180709100              181005024 #>  4:  rsX099        rsX013          1        180709100              180709233 #>  5:  rsX099        rsX015          1        180709100              181114464 #>  6:  rsX099        rsX020          1        180709100              181020238 #>  7:  rsX099        rsX021          1        180709100              181060085 #>  8:  rsX099        rsX030          1        180709100              180744030 #>  9:  rsX099        rsX031          1        180709100              181058720 #> 10:  rsX099        rsX037          1        180709100              181106008  # Total number of pairs nrow(snp_pairs) #> [1] 200  # Chromosomes unique(snp_pairs$chromosome) #> [1] \"1\"  \"19\" \"4\""},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"zygosity","dir":"Articles","previous_headings":"Data","what":"Zygosity","title":"Introduction to daeqtlr","text":"zygosity data table consists zygosity levels SNP / sample combination. Samples also dummy therefore generically named \"s01\", \"s02\", etc. values \"hom\" \"het\" stand homozygous heterozygous, respectively.","code":"# First 10 SNPs, first 15 samples (first column is the SNP identifier) zygosity[1:10, 1:16] #>        snp s01 s02 s03 s04 s05 s06 s07 s08 s09 s10 s11 s12 s13 s14 s15 #>  1: rsX001 hom hom hom het hom hom hom hom hom hom hom hom het hom hom #>  2: rsX002 hom hom hom hom hom hom hom hom hom hom het hom hom hom hom #>  3: rsX003 het hom hom het het hom hom hom hom hom hom het hom hom hom #>  4: rsX004 hom hom hom het het hom hom het hom hom het het hom hom hom #>  5: rsX005 het hom het het hom het het het hom hom hom hom het hom het #>  6: rsX006 hom het het hom hom het hom het hom het het hom het hom het #>  7: rsX007 hom hom hom hom hom hom hom hom hom hom hom hom hom hom hom #>  8: rsX008 hom hom hom hom hom hom het hom het het hom het het het het #>  9: rsX009 het het hom hom hom het hom hom hom hom hom hom hom hom hom #> 10: rsX010 het hom het het hom het het het hom hom hom hom het hom het  # Number of genotyped (determined zygosity) SNPs nrow(zygosity) #> [1] 66"},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"allelic-expression-ratios-m-values","dir":"Articles","previous_headings":"Data","what":"Allelic expression ratios (M-values)","title":"Introduction to daeqtlr","text":"ae data table contains \\(\\log_2\\) ratio expression one alleles . metric also known M-value1. daeqtlr documentation typically refer M-values log-ratios AE ratios. \\[\\text{M} = \\log_2 \\frac{x_{}}{x_{B}}\\] \\(x_{}\\) \\(x_{B}\\) allelic expression B alleles, respectively. can microarray intensities sequencing counts measure bears linear relationship allelic expression. alternative metric Beta-value \\((\\beta)\\), .e. relative expression one allele total two alleles’ expression: \\[\\beta = \\frac{x_{}}{x_{} + x_{B}}\\] example data set, ae data table comprises M-values shown desirable properties statistical testing1. However, find Beta-values intuitive hence preferable reporting results may use function m2b() conversion (b2m() reverse operation). M-values can vary -Inf, one alleles expressed, Inf, allele expressed. M-value zero means balanced allelic expression (equal expression alleles). Note sparse ae data table , many NAs values. allelic ratios can’t assayed homozygous samples, hence resulting NA values. NAs actually truly missing ratios heterozygous samples.","code":"# Number of DAE SNPs, i.e. SNPs with measured allelic expression nrow(ae) #> [1] 11  # First 5 samples (first column is the SNP identifier) ae[, 1:6] #>     dae_snp        s01        s02       s03         s04      s05 #>  1:  rsX019         NA         NA        NA          NA       NA #>  2:  rsX020         NA         NA        NA          NA 1.177345 #>  3:  rsX031  0.4327613         NA        NA          NA       NA #>  4:  rsX038 -0.4708422         NA 0.5077259 -0.08951668       NA #>  5:  rsX041         NA -0.8541327 0.3527521          NA       NA #>  6:  rsX048         NA         NA        NA          NA       NA #>  7:  rsX049  0.4654740         NA        NA -0.24431776       NA #>  8:  rsX051         NA         NA        NA          NA       NA #>  9:  rsX058         NA  1.8976226 1.3837823          NA 2.410208 #> 10:  rsX059         NA         NA        NA          NA       NA #> 11:  rsX060         NA         NA        NA          NA       NA"},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"daeqtl-mapping","dir":"Articles","previous_headings":"","what":"DAEQTL mapping","title":"Introduction to daeqtlr","text":"perform DAEQTL mapping use function daeqtl_mapping(). P-value associated statistical association appended new column data table snp_pairs. Check vignette('parallel') learn setup environment run daeqtl_mapping() parallel. Now let us sort ascending P value check pairs show strong evidence association.","code":"mapping_dt <- daeqtl_mapping(snp_pairs = snp_pairs,                                   zygosity = zygosity,                                   ae = ae)  # Omiting here the columns `dae_snp_position` and `candidate_snp_position` # and showing only the first 5 pairs for brevity. mapping_dt[1:5, -c('dae_snp_position', 'candidate_snp_position')] #>    dae_snp candidate_snp chromosome    pvalue case #> 1:  rsX019        rsX002         19 0.8331668    4 #> 2:  rsX019        rsX003         19 0.1348031    4 #> 3:  rsX019        rsX005         19 0.9280741    4 #> 4:  rsX019        rsX010         19 0.9280741    4 #> 5:  rsX019        rsX014         19 0.1348031    4 mapping_dt %>%   dplyr::select(-c('dae_snp_position', 'candidate_snp_position')) %>%   dplyr::arrange(pvalue) %>%   dplyr::slice_head(n = 10) #>     dae_snp candidate_snp chromosome      pvalue case #>  1:  rsX059        rsX057          4 0.003857293    3 #>  2:  rsX031        rsX062          1 0.004554027    4 #>  3:  rsX031        rsX039          1 0.011581429    4 #>  4:  rsX038        rsX035          4 0.019107190    4 #>  5:  rsX041        rsX032          4 0.033376508    4 #>  6:  rsX058        rsX057          4 0.038642034    4 #>  7:  rsX058        rsX059          4 0.038642034    4 #>  8:  rsX041        rsX009          4 0.041884336    4 #>  9:  rsX051        rsX023         19 0.046695338    4 #> 10:  rsX060        rsX003         19 0.059058229    3"},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"rsx059-and-rsx057","dir":"Articles","previous_headings":"DAEQTL mapping","what":"rsX059 and rsX057","title":"Introduction to daeqtlr","text":"TODO: Explanation case 3.","code":"# DAEQTL plot for the pair rsX059/rsX057 daeqtl_plot(   ae_hom = ae_hom('rsX059', 'rsX057', zygosity, ae),   ae_het = ae_het('rsX059', 'rsX057', zygosity, ae) )"},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"rsx031-and-rsx062","dir":"Articles","previous_headings":"DAEQTL mapping","what":"rsX031 and rsX062","title":"Introduction to daeqtlr","text":"TODO: Explanation case 4.","code":"# DAEQTL plot for the pair rsX031/rsX062 daeqtl_plot(   ae_hom = ae_hom('rsX031', 'rsX062', zygosity, ae),   ae_het = ae_het('rsX031', 'rsX062', zygosity, ae) )"},{"path":"https://maialab.org/daeqtlr/articles/daeqtlr.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to daeqtlr","text":"1. Du, P. et al. Comparison Beta-value M-value methods quantifying methylation levels microarray analysis. BMC Bioinformatics 11, (2010).","code":""},{"path":"https://maialab.org/daeqtlr/articles/parallel.html","id":"running-on-your-local-computer","dir":"Articles","previous_headings":"","what":"Running on your local computer","title":"Run DAEQTL mapping in parallel","text":"’s example performs DAEQTL mapping parallel across 3 cores. data table snp_pairs split 3 chunks (argument .n_chunks) worker (“forked process”) runs one chunks.","code":"library(daeqtlr)  n_workers <- 3L future::plan(future::multisession, workers = n_workers)  snp_pairs <- read_snp_pairs(file = daeqtlr_example(\"snp_pairs.csv\")) zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\")) ae <- read_ae_ratios(file = daeqtlr_example(\"ae.csv\"))  mapping_dt <- daeqtl_mapping(   snp_pairs = snp_pairs,   zygosity = zygosity,   ae = ae )  # This is not mandatory but it's a good practice to reset the parallelization # setup to sequential. future::plan(\"sequential\")"},{"path":"https://maialab.org/daeqtlr/articles/parallel.html","id":"running-on-two-remote-machines","dir":"Articles","previous_headings":"","what":"Running on two remote machines","title":"Run DAEQTL mapping in parallel","text":"example applies situation ’d want run two remote computers, e.g. rey r2d2. following code work need following setup: SSH access remotes machines, e.g. rey r2d2. already installed daeqtlr machines. want run code one machines, change hostname computer \"localhost\", e.g., intended run code rey, :","code":"library(daeqtlr)  workers <- c(rep(\"rey\", times = 64L), rep(\"r2d2\", times = 40L)) # `future::plan` may take one or two minutes to complete. plan <- future::plan(future::cluster, workers = workers, homogeneous = FALSE)  snp_pairs <- read_snp_pairs(file = daeqtlr_example(\"snp_pairs.csv\")) zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\")) ae <- read_ae_ratios(file = daeqtlr_example(\"ae.csv\"))  mapping_dt <- daeqtl_mapping(   snp_pairs = snp_pairs,   zygosity = zygosity,   ae = ae )  # This is not mandatory but it's a good practice to reset the parallelization # setup to sequential. future::plan(\"sequential\") library(daeqtlr)  workers <- c(rep(\"localhost\", times = 64L), rep(\"r2d2\", times = 40L)) # `future::plan` may take one or two minutes to complete. plan <- future::plan(future::cluster, workers = workers, homogeneous = FALSE)  snp_pairs <- read_snp_pairs(file = daeqtlr_example(\"snp_pairs.csv\")) zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\")) ae <- read_ae_ratios(file = daeqtlr_example(\"ae.csv\"))  mapping_dt <- daeqtl_mapping(   snp_pairs = snp_pairs,   zygosity = zygosity,   ae = ae )  # This is not mandatory but it's a good practice to reset the parallelization # setup to sequential. future::plan(\"sequential\")"},{"path":"https://maialab.org/daeqtlr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ramiro Magno. Author, maintainer. Joana M Xavier. Author. Ana-Teresa Maia. Author. . Copyright holder, funder.","code":""},{"path":"https://maialab.org/daeqtlr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Magno R, M Xavier J, Maia (2022). daeqtlr: DAEQTL Mapping. http://maialab.org/daeqtlr, https://github.com/maialab/daeqtlr.","code":"@Manual{,   title = {daeqtlr: DAEQTL Mapping},   author = {Ramiro Magno and Joana {M Xavier} and Ana-Teresa Maia},   year = {2022},   note = {http://maialab.org/daeqtlr, https://github.com/maialab/daeqtlr}, }"},{"path":"https://maialab.org/daeqtlr/index.html","id":"daeqtlr","dir":"","previous_headings":"","what":"DAEQTL Mapping","title":"DAEQTL Mapping","text":"goal daeqtlr perform differential allelic expression trait loci (DAEQTL) mapping. Differential allelic expression (DAE) can treated quantitative trait. Marker genotypes collected set individuals can, turn, used testing statistical associations DAE. package provides routines performing workflow, .e. DAEQTL mapping. Learn https://maialab.org/daeqtlr.","code":""},{"path":"https://maialab.org/daeqtlr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"DAEQTL Mapping","text":"can install development version daeqtlr like :","code":"# install.packages(\"remotes\") remotes::install_github(\"maialab/daeqtlr\")"},{"path":"https://maialab.org/daeqtlr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"DAEQTL Mapping","text":"’s quick example perform DAEQTL mapping daeqtlr. details example read vignette(\"daeqtlr\").","code":"library(daeqtlr)  # SNP pairs to be tested for statistical association snp_pairs <- read_snp_pairs(file = daeqtlr_example(\"snp_pairs.csv\"))  # Zygosity levels (homozygous or heterozygous) for genotyped SNPs zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\"))  # Allelic expression (AE) ratios of DAE SNPs ae <- read_ae_ratios(file = daeqtlr_example(\"ae.csv\"))  mapping_dt <-   daeqtl_mapping(snp_pairs = snp_pairs,                  zygosity = zygosity,                  ae = ae)  # Here's the first 30 SNP pairs tested mapping_dt[1:30, -c('dae_snp_position', 'candidate_snp_position')] #>     dae_snp candidate_snp chromosome    pvalue case #>  1:  rsX019        rsX002         19 0.8331668    4 #>  2:  rsX019        rsX003         19 0.1348031    4 #>  3:  rsX019        rsX005         19 0.9280741    4 #>  4:  rsX019        rsX010         19 0.9280741    4 #>  5:  rsX019        rsX014         19 0.1348031    4 #>  6:  rsX019        rsX016         19        NA    2 #>  7:  rsX019        rsX017         19        NA    2 #>  8:  rsX019        rsX018         19 0.9255817    4 #>  9:  rsX019        rsX022         19 0.3994533    4 #> 10:  rsX019        rsX023         19 0.3736310    4 #> 11:  rsX019        rsX024         19 0.8813157    4 #> 12:  rsX019        rsX025         19        NA    1 #> 13:  rsX019        rsX026         19        NA    1 #> 14:  rsX019        rsX043         19        NA    1 #> 15:  rsX019        rsX045         19        NA    2 #> 16:  rsX019        rsX046         19        NA    1 #> 17:  rsX019        rsX047         19        NA    2 #> 18:  rsX019        rsX048         19        NA    2 #> 19:  rsX019        rsX050         19        NA    2 #> 20:  rsX019        rsX051         19        NA    2 #> 21:  rsX019        rsX053         19        NA    2 #> 22:  rsX019        rsX054         19        NA    2 #> 23:  rsX019        rsX060         19 0.1348031    4 #> 24:  rsX019        rsX064         19        NA    1 #> 25:  rsX020        rsX008          1 0.1226391    4 #> 26:  rsX020        rsX011          1 0.1003482    3 #> 27:  rsX020        rsX012          1 0.1003482    3 #> 28:  rsX020        rsX013          1        NA    1 #> 29:  rsX020        rsX015          1 0.3492677    4 #> 30:  rsX020        rsX021          1 0.1814492    3 #>     dae_snp candidate_snp chromosome    pvalue case"},{"path":"https://maialab.org/daeqtlr/reference/ae.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a vector of allelic expression ratios — ae","title":"Extract a vector of allelic expression ratios — ae","text":"ae() provides handy shortcut extract vector allelic expression ratios DAE SNP set samples. ae_hom() ae_het() also extract vector allelic expression ratios corresponding homozygous heterozygous samples candidate SNP, respectively.","code":""},{"path":"https://maialab.org/daeqtlr/reference/ae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a vector of allelic expression ratios — ae","text":"","code":"ae(dae_snp, ae, samples = rep(TRUE, ncol(ae) - 1), drop_na = TRUE)  ae_hom(dae_snp, candidate_snp, zygosity, ae, drop_na = TRUE)  ae_het(dae_snp, candidate_snp, zygosity, ae, drop_na = TRUE)"},{"path":"https://maialab.org/daeqtlr/reference/ae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a vector of allelic expression ratios — ae","text":"dae_snp string indicating identifier DAE SNP. ae data frame expression values. row locus. locus identity indicated first column. Remaining columns samples. samples Either logical integer vector indicating samples ae data table selected. drop_na Whether drop NA values returned value. candidate_snp string indicating identifier candidate SNP. zygosity data frame zygosity levels: \"hom\" homozygous \"het\" heterozygous. row locus. locus identity indicated first column named snp. Remaining columns samples.","code":""},{"path":"https://maialab.org/daeqtlr/reference/ae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a vector of allelic expression ratios — ae","text":"numeric vector allelic ratios.","code":""},{"path":"https://maialab.org/daeqtlr/reference/ae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a vector of allelic expression ratios — ae","text":"","code":"# Let us load some dummy data zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\")) ae <- read_ae_ratios(file = daeqtlr_example(\"ae.csv\"))  # Select all allelic expression ratios of rsX019 ae('rsX019', ae = ae, drop_na = FALSE) #>  [1]          NA          NA          NA          NA          NA          NA #>  [7] -0.78121260          NA          NA -0.19801280 -0.27931810          NA #> [13]          NA          NA          NA -0.92423460 -0.03798342  0.03065449 #> [19]          NA  0.10446470          NA          NA          NA          NA #> [25]          NA          NA          NA -0.23169140          NA          NA #> [31]          NA          NA -0.32567110          NA          NA          NA #> [37]          NA          NA          NA -0.15817040          NA -0.44861720 #> [43]          NA          NA          NA  0.09732815          NA          NA #> [49]          NA          NA  # Select only the first 5 samples ae('rsX019', ae = ae, samples = 1:5, drop_na = FALSE) #> [1] NA NA NA NA NA  # Use a logical vector to select samples that meet a requirement, e.g. # heterozygous samples only. Note that `is_het()` is useful here. (het_samples_for_rsX019 <- is_het(zygosity = zygosity, snp = 'rsX019')) #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE #> [13]  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE #> [25] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE #> [37] FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE #> [49] FALSE FALSE ae('rsX019', ae = ae, samples = het_samples_for_rsX019, drop_na = FALSE) #>  [1] -0.78121260 -0.19801280 -0.27931810          NA -0.92423460 -0.03798342 #>  [7]  0.03065449  0.10446470 -0.23169140 -0.32567110 -0.15817040 -0.44861720 #> [13]  0.09732815  # If you want the allelic ratios for samples that are simultaneously: # - heterozygous for rsX019 # - homozygous for rsX002 (hom_samples_for_rsX002 <- is_hom(zygosity = zygosity, snp = 'rsX002')) #>  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE #> [13]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE #> [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE #> [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE #> [49]  TRUE FALSE ae(   dae_snp = 'rsX019',   ae = ae,   samples = het_samples_for_rsX019 & hom_samples_for_rsX002,   drop_na = FALSE   ) #>  [1] -0.78121260 -0.19801280          NA -0.92423460 -0.03798342  0.10446470 #>  [7] -0.23169140 -0.32567110 -0.15817040 -0.44861720  0.09732815  # Or more simply: ae_hom('rsX019', 'rsX002', zygosity, ae, drop_na = FALSE) #>  [1] -0.78121260 -0.19801280          NA -0.92423460 -0.03798342  0.10446470 #>  [7] -0.23169140 -0.32567110 -0.15817040 -0.44861720  0.09732815"},{"path":"https://maialab.org/daeqtlr/reference/as_zygous.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert genotypes to zygosity — as_zygous","title":"Convert genotypes to zygosity — as_zygous","text":"function takes data table genotypes (\"AA\", \"AB\", \"BA\" \"BB\") converts corresponding zygosity, .e., homozygous (\"hom\") heterozygous (\"het\"). argument genotypes expected data table whose first column SNP identifier, remaining columns refer samples SNP genotyped. columns except first factors, contain levels \"AA\", \"AB\", \"BA\" \"BB\". Note function changes input reference, meaning variable passed genotypes modified running as_zygous(). performance reasons.","code":""},{"path":"https://maialab.org/daeqtlr/reference/as_zygous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert genotypes to zygosity — as_zygous","text":"","code":"as_zygous(genotypes)"},{"path":"https://maialab.org/daeqtlr/reference/as_zygous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert genotypes to zygosity — as_zygous","text":"genotypes data table whose first column SNP identifier (character vector), remaining columns refer samples SNP genotyped. columns except first factors, contain levels \"AA\", \"AB\", \"BA\" \"BB\".","code":""},{"path":"https://maialab.org/daeqtlr/reference/as_zygous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert genotypes to zygosity — as_zygous","text":"data table structure data table passed genotypes. difference sample columns (except first) levels recoded \"hom\" (homozygous) \"het\"(heterozygous).","code":""},{"path":[]},{"path":"https://maialab.org/daeqtlr/reference/as_zygous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert genotypes to zygosity — as_zygous","text":"","code":"levels <- c(\"AA\", \"AB\", \"BA\", \"BB\") (df <- data.frame(   snp = c('rs123', 'rs456'),   sample01 = factor(c('AB', 'BA'), levels),   sample02 = factor(c('AA', 'BB'), levels) )) #>     snp sample01 sample02 #> 1 rs123       AB       AA #> 2 rs456       BA       BB as_zygous(df) #>     snp sample01 sample02 #> 1 rs123      het      hom #> 2 rs456      het      hom df #>     snp sample01 sample02 #> 1 rs123      het      hom #> 2 rs456      het      hom"},{"path":"https://maialab.org/daeqtlr/reference/create_snp_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table of SNP pairs — create_snp_pairs","title":"Create a table of SNP pairs — create_snp_pairs","text":"function creates data table SNP pairs used DAEQTL mapping. Essentially, function looks neighboring SNPs, .e. within genomic window (specified window_size) creates data table SNP pairs, long format. Check vignette('snp-pairs') understand might need use function.","code":""},{"path":"https://maialab.org/daeqtlr/reference/create_snp_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table of SNP pairs — create_snp_pairs","text":"","code":"create_snp_pairs(snp_table, window_size = 500000L)"},{"path":"https://maialab.org/daeqtlr/reference/create_snp_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table of SNP pairs — create_snp_pairs","text":"snp_table data table SNP used DAEQTL mapping. Typically, object created create_snp_table(). See vignette('snp-pairs') context. window_size genomic window size, base pairs. Default 500 kb, DAE SNP, .e. window 1 Mb around DAE SNP.","code":""},{"path":"https://maialab.org/daeqtlr/reference/create_snp_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table of SNP pairs — create_snp_pairs","text":"data table.","code":""},{"path":"https://maialab.org/daeqtlr/reference/create_snp_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SNP table — create_snp_table","title":"Create a SNP table — create_snp_table","text":"function assembles data frame SNPs involved DAEQTL mapping. Besides genomic position SNP, annotates SNP DAE SNP DAEQTL candidate SNP: columns is_dae_snp is_candidate_snp. returned data frame useful intermediate data structure workflow, namely looking candidate neighbouring SNPs. Check vignette('snp-pairs') understand use function.","code":""},{"path":"https://maialab.org/daeqtlr/reference/create_snp_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SNP table — create_snp_table","text":"","code":"create_snp_table(snp_gen_pos, dae_snps, candidate_snps)"},{"path":"https://maialab.org/daeqtlr/reference/create_snp_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SNP table — create_snp_table","text":"snp_gen_pos data frame three columns: snp, chromosome position. dae_snps data frame one column containing DAE SNPs. candidate_snps data frame one column containing DAEQTL candidate SNPs.","code":""},{"path":"https://maialab.org/daeqtlr/reference/create_snp_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SNP table — create_snp_table","text":"function adds two columns snp_gen_pos -place, object passed snp_gen_pos modified call function.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEQTL mapping — daeqtl_mapping","title":"DAEQTL mapping — daeqtl_mapping","text":"TODO","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEQTL mapping — daeqtl_mapping","text":"","code":"daeqtl_mapping(   snp_pairs,   zygosity,   ae,   fn = daeqtl_test,   ...,   .extra_cols = 2L,   .n_chunks = future::nbrOfWorkers() )"},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEQTL mapping — daeqtl_mapping","text":"snp_pairs data frame DAE SNP/candidate SNP pairs. zygosity data frame zygosity levels samples. First column SNP identity, remaining columns refer biological samples. factors, levels \"hom\" (homozygous) \"het\" (heterozygous). ae data frame allelic expression (AE) ratios. row locus. locus identity indicated first column. Remaining columns samples. fn function implementing statistical association approach. function needs two named arguments ae_hom ae_het. Extra arguments read .... ... Extra arguments passed call function passed fn. .extra_cols number extra columns creating fn. .n_chunks number chunks divide snp_pairs parallel processing. going run parallel set number equal total number workers.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEQTL mapping — daeqtl_mapping","text":"updated version data frame snp_pairs. update includes extra columns, typically pvalue case.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEQTL plot — daeqtl_plot","title":"DAEQTL plot — daeqtl_plot","text":"simple wrapper around ggplot2 plot showing allelic expression ratios two groups samples: homozygous heterozygous. handy function quickly inspect data underlying DAEQTL mapping test.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEQTL plot — daeqtl_plot","text":"","code":"daeqtl_plot(   ae_hom,   ae_het,   dae_threshold = log2(1.5),   min_n_hom = 2L,   min_n_het = 2L,   dae_threshold_linetype = \"dashed\",   xlab = \"Candidate SNP zygosity\",   ylab = \"DAE SNP allelic expression (log-ratio)\",   ylim = NULL )"},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEQTL plot — daeqtl_plot","text":"ae_hom Numeric vector AE ratios DAE SNP. element vector refers sample homozygous (hom) candidate SNP. ae_het Numeric vector AE ratios DAE SNP. element vector refers sample heterozygous (het) candidate SNP. dae_threshold allelic expression (AE) threshold (log-scale). sample showing absolute AE greater dae_threshold considered \"technically\" differential allelic expressed, meaning imbalance observed limit detection. Adjustment made parameter depend experimental assay sensitivity. min_n_hom Minimum number samples homozygous group considered eligible statistical testing. min_n_het Minimum number samples heterozygous group considered eligible statistical testing. dae_threshold_linetype Line type DAE threshold. See Line type options. xlab Title x-axis. ylab Title y-axis. ylim two element vector specifying y-axis limits.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DAEQTL plot — daeqtl_plot","text":"","code":"ae_hom <- c(1.9, 2.1, 2 , 1.5, 1.4) ae_het <- c(0.3, 0.6, 0.7) daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)"},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_test.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEQTL test — daeqtl_test","title":"DAEQTL test — daeqtl_test","text":"function implements daeqtlr's default approach testing association candidate SNP zygosity allelic expression DAE SNP. method takes account pattern allelic expression (AE) ratios' distribution displayed DAE SNP (depicted ), dependent linkage disequilibrium DAE SNP candidate SNP. cases requirements application methodology met measure statistical association significance derived. cases depicted figure , explained section Value.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEQTL test — daeqtl_test","text":"","code":"daeqtl_test(   ae_hom,   ae_het,   dae_threshold = log2(1.5),   min_n_hom = 2L,   min_n_het = 2L )"},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEQTL test — daeqtl_test","text":"ae_hom Numeric vector AE ratios DAE SNP. element vector refers sample homozygous (hom) candidate SNP. ae_het Numeric vector AE ratios DAE SNP. element vector refers sample heterozygous (het) candidate SNP. dae_threshold allelic expression (AE) threshold (log-scale). sample showing absolute AE greater dae_threshold considered \"technically\" differential allelic expressed, meaning imbalance observed limit detection. Adjustment made parameter depend experimental assay sensitivity. min_n_hom Minimum number samples homozygous group considered eligible statistical testing. min_n_het Minimum number samples heterozygous group considered eligible statistical testing.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEQTL test — daeqtl_test","text":"data frame two columns: pvalue p-value associated statistical test, performed; otherwise, NA. case One four possible cases depicted figure . identified case depends number samples group pattern allelic expression (AE) ratios DAE SNP: 1 Case 1: number samples candidate SNP heterozygous DAE SNP expression available minimum eligibility criterion min_n_het. 2 Case 2: () number samples candidate SNP homozygous min_n_hom, also, (ii) values DAE SNP AE ratios either dae_threshold. 3 Case 3: number samples candidate SNP homozygous min_n_hom, however, values DAE SNP AE ratios either dae_threshold. case followed one-sample Wilcox test whose null hypothesis AE ratios zero. 4 Case 4: minimum number heterozygous homozygous samples candidate SNP available, Wilcox test applied compares two groups. AE ratios first transformed absolute values. want test departure zero either direction. null hypothesis absolute AE ratios heterozygous group less equal homozygous group.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtl_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DAEQTL test — daeqtl_test","text":"","code":"# # Case 1 # # The number of heterozygous samples (n = 1) does not meet the minimum # required (default is `min_n_het` = 2). Hence, no statistical test is # applied, the `pvalue` is `NA` and `case` is `1`. # ae_hom <- c(0.3, 0.1, 1.3 , 1.5, 0.4) ae_het <- 0.3 daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>   pvalue case #> 1     NA    1 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # Be stricter with the number of heterozygous samples, e.g. `min_n_het = 4L`. # ae_het <- c(0.3, 2.1, 3.2) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het, min_n_het = 4L) #>   pvalue case #> 1     NA    1 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # # Case 2 # # The number of homozygous samples does not meet the minimum requirement # (default is `min_n_hom` = 2) and also the AE ratios are not either all # above or all below the DAE threshold (`dae_threshold`). # ae_hom <- numeric() ae_het <- c(0.3, 0.1, 1.3 , 1.5, 0.4, 0.59, 0.67, 0.89, 1.35) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>   pvalue case #> 1     NA    2 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # # Case 3 # # The number of homozygous samples does not meet the minimum requirement # (default is `min_n_hom` = 2) but the AE ratios are either all above or all # below the DAE threshold (default is `dae_threshold = log2(1.5)`). Hence, a # one-sample Wilcox test is applied to test the null hypothesis that the # AE ratios for the heterozygous group is significantly different from zero. # ae_hom <- numeric() ae_het <- c(2.8, 3.1, 1.3 , 1.5, 2.3, 0.59, 0.67, 0.89, 1.35) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>        pvalue case #> 1 0.009151689    3 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # # Case 4 # # Both the number of homozygous and heterozygous samples are equal or # above the minima defined by `min_n_hom` and `min_n_het`. Hence, a # two-sample Wilcox test is applied to test the null hypothesis that the # absolute AE ratios for the heterozygous group is less than or equal to # those of the homozygous group. # # Example: Both groups show imbalance above zero, i.e. show preference for # the same allele. However, the imbalance magnitude of the heterozygous group # is clearly below that of the homozygous group, resulting in a # non-significant p-value. # ae_hom <- c(1.9, 2.1, 2 , 1.5, 1.4) ae_het <- c(0.3, 0.6, 0.7) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>      pvalue case #> 1 0.9914637    4 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # Example: the exact reverse of the previous example. # ae_hom <- c(0.3, 0.6, 0.7) ae_het <- c(1.9, 2.1, 2 , 1.5, 1.4) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>       pvalue case #> 1 0.01844421    4 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # Example: the heterozygous group clearly shows greater imbalance (greater # departure from zero) than the homozygous group, resulting in a significant # p-value. # ae_hom <- c(0.1, 0.3, 0.2 , 0.21, 0.15) ae_het <- c(0.6, 0.8, 1.2, -1.5, -3, -2.5, -1, 2, 2.7) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>        pvalue case #> 1 0.001676718    4 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)   # Example: the exact reverse of the previous example. # ae_hom <- c(0.6, 0.8, 1.2, -1.5, -3, -2.5, -1, 2, 2.7) ae_het <- c(0.1, 0.3, 0.2 , 0.21, 0.15) daeqtl_test(ae_hom = ae_hom, ae_het = ae_het) #>      pvalue case #> 1 0.9989177    4 daeqtl_plot(ae_hom = ae_hom, ae_het = ae_het)"},{"path":"https://maialab.org/daeqtlr/reference/daeqtlr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"daeqtlr: DAEQTL Mapping — daeqtlr-package","title":"daeqtlr: DAEQTL Mapping — daeqtlr-package","text":"Differential allelic expression (DAE) can treated quantitative trait. Marker genotypes collected set individuals can, turn, used testing statistical associations DAE. package provides routines performing workflow, .e. differential allelic expression trait loci mapping.","code":""},{"path":[]},{"path":"https://maialab.org/daeqtlr/reference/daeqtlr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"daeqtlr: DAEQTL Mapping — daeqtlr-package","text":"Maintainer: Ramiro Magno ramiro.magno@gmail.com (ORCID) Authors: Joana M Xavier joana.xavier1@gmail.com (ORCID) Ana-Teresa Maia maia.anateresa@gmail.com (ORCID) contributors: CINTESIS [copyright holder, funder]","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtlr_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to daeqtlr example — daeqtlr_example","title":"Get path to daeqtlr example — daeqtlr_example","text":"daeqtlr comes bundled number sample files inst/extdata directory. function make easy access.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtlr_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to daeqtlr example — daeqtlr_example","text":"","code":"daeqtlr_example(file = NULL)"},{"path":"https://maialab.org/daeqtlr/reference/daeqtlr_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to daeqtlr example — daeqtlr_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://maialab.org/daeqtlr/reference/daeqtlr_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to daeqtlr example — daeqtlr_example","text":"","code":"daeqtlr_example() #> [1] \"ae.csv\"                \"candidate_snps.txt\"    \"dae_snps.txt\"          #> [4] \"genotypes.csv\"         \"snp_gen_positions.csv\" \"snp_pairs.csv\"         #> [7] \"zygosity.csv\"          daeqtlr_example(\"zygosity.csv\") #> [1] \"/home/runner/work/_temp/Library/daeqtlr/extdata/zygosity.csv\""},{"path":"https://maialab.org/daeqtlr/reference/is_hom.html","id":null,"dir":"Reference","previous_headings":"","what":"Who are the homozygous/heterozygous samples? — is_hom","title":"Who are the homozygous/heterozygous samples? — is_hom","text":"function determines homozygous heterozygous samples given data table zygosity levels SNP interest. Samples whose zygosity level NA returned FALSE.","code":""},{"path":"https://maialab.org/daeqtlr/reference/is_hom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Who are the homozygous/heterozygous samples? — is_hom","text":"","code":"is_hom(zygosity, snp)  is_het(zygosity, snp)"},{"path":"https://maialab.org/daeqtlr/reference/is_hom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Who are the homozygous/heterozygous samples? — is_hom","text":"zygosity data frame zygosity levels: \"hom\" homozygous \"het\" heterozygous. row locus. locus identity indicated first column named snp. Remaining columns samples. snp String SNP identifier.","code":""},{"path":"https://maialab.org/daeqtlr/reference/is_hom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Who are the homozygous/heterozygous samples? — is_hom","text":"logical vector.","code":""},{"path":"https://maialab.org/daeqtlr/reference/is_hom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Who are the homozygous/heterozygous samples? — is_hom","text":"","code":"# Let us start by reading in an example data set with zygosity levels zygosity <- read_snp_zygosity(file = daeqtlr_example(\"zygosity.csv\"))  # Checking out SNP rsX005 zygosity['rsX005'] #>       snp s01 s02 s03 s04 s05 s06 s07 s08 s09 s10 s11 s12 s13 s14 s15 s16 s17 #> 1: rsX005 het hom het het hom het het het hom hom hom hom het hom het hom het #>    s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30  s31  s32 s33 s34 s35 #> 1: het hom het het hom hom hom het het het het het hom <NA> <NA> het hom hom #>    s36 s37 s38 s39 s40 s41 s42 s43 s44 s45 s46 s47 s48 s49 s50 #> 1: hom het het hom hom hom hom hom het het het hom hom het het is_hom(zygosity, 'rsX005') #>  [1] FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE #> [13] FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE #> [25] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE #> [37] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE #> [49] FALSE FALSE is_het(zygosity, 'rsX005') #>  [1]  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE #> [13]  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE #> [25]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE #> [37]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE #> [49]  TRUE  TRUE  # Translate the logical vector to sample names # Note that first column is excluded because it is the SNP identifier col # Homozygous samples (homs <- colnames(zygosity)[-1][is_hom(zygosity, 'rsX005')]) #>  [1] \"s02\" \"s05\" \"s09\" \"s10\" \"s11\" \"s12\" \"s14\" \"s16\" \"s19\" \"s22\" \"s23\" \"s24\" #> [13] \"s30\" \"s34\" \"s35\" \"s36\" \"s39\" \"s40\" \"s41\" \"s42\" \"s43\" \"s47\" \"s48\"  # Heterozygous samples (hets <- colnames(zygosity)[-1][is_het(zygosity, 'rsX005')]) #>  [1] \"s01\" \"s03\" \"s04\" \"s06\" \"s07\" \"s08\" \"s13\" \"s15\" \"s17\" \"s18\" \"s20\" \"s21\" #> [13] \"s25\" \"s26\" \"s27\" \"s28\" \"s29\" \"s33\" \"s37\" \"s38\" \"s44\" \"s45\" \"s46\" \"s49\" #> [25] \"s50\"  # Some samples are neither homozygous nor heterozygous because of NAs # Note the `- 1` because the first column of `zygosity` is the SNP identifier. (ncol(zygosity) - 1) - length(c(homs, hets)) #> [1] 2  # The samples whose zygosity is NA are: setdiff(colnames(zygosity)[-1], c(homs, hets)) #> [1] \"s31\" \"s32\""},{"path":"https://maialab.org/daeqtlr/reference/m2b.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert M-values to Beta-values and back again — m2b","title":"Convert M-values to Beta-values and back again — m2b","text":"m2b() converts M-values Beta-values. b2m() converts Beta-values M-values.","code":""},{"path":"https://maialab.org/daeqtlr/reference/m2b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert M-values to Beta-values and back again — m2b","text":"","code":"m2b(m, base = 2)  b2m(b, base = 2)"},{"path":"https://maialab.org/daeqtlr/reference/m2b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert M-values to Beta-values and back again — m2b","text":"m numeric vector M-values. base base respect logarithms computed. Defaults base = 2. b numeric vector Beta-values.","code":""},{"path":"https://maialab.org/daeqtlr/reference/m2b.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert M-values to Beta-values and back again — m2b","text":"Du, P. et al. Comparison Beta-value M-value methods quantifying methylation levels microarray analysis. BMC Bioinformatics 11, (2010). doi:10.1186/1471-2105-11-587 .","code":""},{"path":"https://maialab.org/daeqtlr/reference/m2b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert M-values to Beta-values and back again — m2b","text":"","code":"# M-values and Beta-values have different domains m2b(c(-Inf, 0, Inf)) #> [1] 0.0 0.5 1.0 b2m(c(0, 0.5, 1)) #> [1] -Inf    0  Inf  # `m2b()` and `b2m()` are the inverse of one another b2m(m2b(c(-Inf, 0, Inf))) #> [1] -Inf    0  Inf  m2b(b2m(c(0, 0.5, 1))) #> [1] 0.0 0.5 1.0"},{"path":"https://maialab.org/daeqtlr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://maialab.org/daeqtlr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://maialab.org/daeqtlr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://maialab.org/daeqtlr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_ae_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Import expression ratios — read_ae_ratios","title":"Import expression ratios — read_ae_ratios","text":"function reads expression ratios text file. data expected tabular format. First column expected locus identity (e.g. SNP identifier), remaining columns samples.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_ae_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import expression ratios — read_ae_ratios","text":"","code":"read_ae_ratios(file, sep = \",\", header = TRUE, ...)"},{"path":"https://maialab.org/daeqtlr/reference/read_ae_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import expression ratios — read_ae_ratios","text":"file path file containing expression ratios. sep separator columns. header first data line contain column names? ... Extra arguments passed data.table::fread().","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_ae_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import expression ratios — read_ae_ratios","text":"data frame expression values. row locus. locus identity indicated first column. Remaining columns samples.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_candidate_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"Import DAEQTL candidates — read_candidate_snps","title":"Import DAEQTL candidates — read_candidate_snps","text":"function reads list candidate SNPs DAE quantitative trait loci, text file. One SNP per row. default, expects header, ignored. first line immediately SNP, use header = FALSE ignore .","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_candidate_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import DAEQTL candidates — read_candidate_snps","text":"","code":"read_candidate_snps(file, header = TRUE, distinct = TRUE)"},{"path":"https://maialab.org/daeqtlr/reference/read_candidate_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import DAEQTL candidates — read_candidate_snps","text":"file path file. header first line line column name? distinct Remove duplicate SNPs?","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_candidate_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import DAEQTL candidates — read_candidate_snps","text":"one-column data frame. single column named snp.   Rows candidate SNPs read text file.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_dae_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"Import DAE SNPs — read_dae_snps","title":"Import DAE SNPs — read_dae_snps","text":"function reads list DAE SNPs text file. One SNP per row. default, expects header, ignored anyway. first line immediately SNP, use header = FALSE.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_dae_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import DAE SNPs — read_dae_snps","text":"","code":"read_dae_snps(file, header = TRUE, distinct = TRUE)"},{"path":"https://maialab.org/daeqtlr/reference/read_dae_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import DAE SNPs — read_dae_snps","text":"file path file. header first line line column name? distinct Remove duplicate SNPs?","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_dae_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import DAE SNPs — read_dae_snps","text":"one-column data frame. single column named dae_snp.   Rows DAE SNPs read text file.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_gen_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SNP genomic positions — read_snp_gen_positions","title":"Import SNP genomic positions — read_snp_gen_positions","text":"function reads genomic positions text file. data expected tabular format. First column expected locus identity (e.g. SNP identifier), second column human chromosome (e.g., 22 X), third column position.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_gen_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SNP genomic positions — read_snp_gen_positions","text":"","code":"read_snp_gen_positions(file, sep = \",\", header = TRUE, ...)"},{"path":"https://maialab.org/daeqtlr/reference/read_snp_gen_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SNP genomic positions — read_snp_gen_positions","text":"file path file containing SNP genomic positions. sep separator columns. header first data line contain column names? ... Extra arguments passed data.table::fread().","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_gen_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SNP genomic positions — read_snp_gen_positions","text":"data frame genomic positions. row locus. locus identity indicated first column (snp). Second column chromosome, third column position.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SNP genotypes — read_snp_genotypes","title":"Import SNP genotypes — read_snp_genotypes","text":"function reads SNP genotypes text file. data expected tabular format. First column expected locus identity (e.g. SNP identifier), remaining columns samples. First column expected locus identity (e.g. SNP identifier), remaining columns samples. genotypes expected encoded \"AA\", \"AB\", \"BA\" \"BB\".","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SNP genotypes — read_snp_genotypes","text":"","code":"read_snp_genotypes(file, sep = \",\", header = TRUE, ...)"},{"path":"https://maialab.org/daeqtlr/reference/read_snp_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SNP genotypes — read_snp_genotypes","text":"file path file. sep separator columns. header first data line contain column names? ... Extra arguments passed data.table::fread().","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_genotypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SNP genotypes — read_snp_genotypes","text":"data frame genotype values (\"AA\", \"AB\", \"BA\" \"BB\"). row locus. locus identity indicated first column named snp. Remaining columns samples.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Import pairs of DAE and DAEQTL candidate SNPs — read_snp_pairs","title":"Import pairs of DAE and DAEQTL candidate SNPs — read_snp_pairs","text":"function reads table pairs SNPs CSV file: DAE SNP candidate DAEQTL SNP. One pair per row. file must header columns: dae_snp: DAE SNP. candidate_snp: candidate DAEQTL SNP. chromosome: chromosome pair located. dae_snp_position: DAE SNP position chromosome. candidate_snp_position: candidate DAEQTL SNP position chromosome.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import pairs of DAE and DAEQTL candidate SNPs — read_snp_pairs","text":"","code":"read_snp_pairs(file, ...)"},{"path":"https://maialab.org/daeqtlr/reference/read_snp_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import pairs of DAE and DAEQTL candidate SNPs — read_snp_pairs","text":"file path file. ... Extra arguments passed data.table::fread().","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import pairs of DAE and DAEQTL candidate SNPs — read_snp_pairs","text":"data frame.","code":""},{"path":[]},{"path":"https://maialab.org/daeqtlr/reference/read_snp_zygosity.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SNP zygosity — read_snp_zygosity","title":"Import SNP zygosity — read_snp_zygosity","text":"function reads SNP zygosity levels text file. data expected tabular format. First column expected locus identity (e.g. SNP identifier), remaining columns samples. genotypes expected encoded \"hom\" \"het\", homozygous heterozygous, respectively.","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_zygosity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SNP zygosity — read_snp_zygosity","text":"","code":"read_snp_zygosity(file, sep = \",\", header = TRUE, ...)"},{"path":"https://maialab.org/daeqtlr/reference/read_snp_zygosity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SNP zygosity — read_snp_zygosity","text":"file path file. sep separator columns. header first data line contain column names? ... Extra arguments passed data.table::fread().","code":""},{"path":"https://maialab.org/daeqtlr/reference/read_snp_zygosity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SNP zygosity — read_snp_zygosity","text":"data frame zygosity levels: \"hom\" homozygous \"het\"heterozygous. row locus. locus identity indicated first column named snp. Remaining columns samples.","code":""},{"path":"https://maialab.org/daeqtlr/reference/split_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a split index — split_index","title":"Create a split index — split_index","text":"function creates integer vector can used factor grouping `split()`.","code":""},{"path":"https://maialab.org/daeqtlr/reference/split_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a split index — split_index","text":"","code":"split_index(n, m)"},{"path":"https://maialab.org/daeqtlr/reference/split_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a split index — split_index","text":"n Number elements vector. m Number groups (partitions).","code":""},{"path":"https://maialab.org/daeqtlr/reference/split_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a split index — split_index","text":"integer vector.","code":""}]
